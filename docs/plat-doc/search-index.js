var searchIndex = JSON.parse('{\
"islet_rmm":{"doc":"","t":"AAAOOOOOAOOOAAAOOAAAAOAAAAOAOOAAFAAOFFFRFFRRRRRRRRRRRFFNDENNNLLLLLLLLLLLLLLLLLLLLLLGGDCCGCLLLLLLLLLLLLLALALLCCALLLLGDLLLLLLLLMMLLLLNENNNNNENNNNLLLLLLLLLLLLLLLLLLLLGSSSDLLLLLLLMLLLAAHAAFNNNDNENNRRNENLLLLLLLLLLLLLLLLLLFFLLLALLLLLLLLLLLLNNNNNENNNNNNNNENNNNNLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMDDRRLLLLLLLFLLMMMMFFFFLLLLLLSSRRRDEESSSSSLLLLLLFLLFALLLLLMLLLFFLFFFLFALLLLLLLLLFDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLRHEDRGRFFLLLLLLLLFLLLMLLLLLLLLIDLLLLLLLLLLLALLLLLLDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLIICCGDILLLLKKLLFLLLKLFAAAELLLLLLLLLLEEEEALLLLLLLLALLLLLLLLLLLLLLLLLLLLAAAARRRRRRRRRRSSSSSDSSDSSSSSSLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLRRDLLLFLLLLLLLFFFNNNDENLLLLAALLLLLLLMALMAMALLLLLLAMMDLLLLLFLLLDDDDMMMMLLLLLLLLMMMMMMMMMMMLLLLMMMMLLLLMLLLLLFMMMMMMMMMLLLLLMLMMFMMMMMMMMMLLLLLLLLMMLLLLMMMIAKKKKKAAAAADDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLEEELLLLLLLLLLLLLLLLLLLLLLLLLLLLLLEEEELLLLLLLLALLLLLLLLALLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLLAAAARRRRRRRRRRRRRRRRSSRDDSLLLLLLLLLLLLLLLLLLLLLLLLLLLALLLLLLLRRSSSSSSSSSSRSSSDDSSLLLLLLLLLLALLLLLLLLLLLLLAALLLLLLLLLLLLLLLLLLLLLRRRRRRRRRSSSSSSSDSSSSSLLLLLLLLLLLLLLLLLLLLHFFFFFFINNNEDLLLLLLMFFLLLLLKLLLKLLKLMMFMLLLLLLLRRRRRRRSRRRRRRRRRRRRRRRRRDRSRRRRRRRRRRRRRRRRRRRRRRRLLAAALLLALLLAAAALFLLLADMLLLLMLLLLMLLLLFEENNNNNNNNNNNLLLLLLLLLLLLLLLLLLFFFFDLLLLLLLLLLLLLLLFLLLLLLNNDELLLLLLLLLALLLLLALLLLLLALALLLLAFLLLCLLLLLLLLLLLLALFFSSSSDLLLLLLLLLLLLLLLLLLLLLLFDMLLLMLLMLMMMLLLLLRRRRRDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFFRRRFFFFRRRRRFRRRRRRRRRRRRRRAAFAAAAFFDLLALLLLFLLLLLRGDDRRGRDRRRGGRGGDLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLMMMMMMLLLLLLLLLLLLLLLLFENNNLLLLLLLLRDLLLLLLLLLLLLLFFSSSSSSSSRDDRRSSLLLLLLLLFLLLLLLFFFFFFFFFFF","n":["allocator","asm","config","const_assert","const_assert_eq","const_assert_size","copy_from_host_or_ret","copy_to_host_or_ret","cpu","define_interface","eprint","eprintln","error","event","exception","get_granule","get_granule_if","gic","granule","host","io","listen","logger","macro","mm","mmio","offset_of","panic","print","println","realm","rmi","rmm_exit","rsi","rtt","set_state_and_get_granule","start","get_used_size","init","SMC_SUCCESS","dcache_flush","smc","HUGE_PAGE_SIZE","LARGE_PAGE_SIZE","NUM_OF_CLUSTER","NUM_OF_CPU","NUM_OF_CPU_PER_CLUSTER","PAGE_BITS","PAGE_SIZE","RMM_HEAP_SIZE","RMM_STACK_SIZE","STACK_ALIGN","VM_STACK_SIZE","get_cpu_id","id","AlreadyExists","Error","ErrorKind","NotConnected","Other","Unsupported","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","eq","fmt","fmt","from","from","into","into","kind","new","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","Argument","Command","Context","Error","Mainloop","Return","RsiHandle","arg_slice","borrow","borrow_mut","clone","clone_into","cmd","default","do_rmi","do_rsi","from","init_arg","init_ret","into","mainloop","new","realmexit","resize_ret","ret_slice","rmi","rsi","rsihandle","to_owned","try_from","try_into","type_id","Handler","Mainloop","add_event_handler","boot_complete","borrow","borrow_mut","dispatch","from","into","new","on_event","queue","run","try_from","try_into","type_id","DataAbort","ExitSyncType","FIQ","IRQ","InstAbort","PSCI","RSI","RecExitReason","SError","Sync","Undefined","Undefined","borrow","borrow","borrow_mut","borrow_mut","fmt","fmt","from","from","from","from","into","into","into","into","try_from","try_from","try_into","try_into","type_id","type_id","Handler","NOT_SUPPORTED","RET_FAIL","RET_SUCCESS","RsiHandle","add_event_handler","borrow","borrow_mut","dispatch","from","into","new","on_event","try_from","try_into","type_id","lower","trap","vectors","synchronous","sys_reg","handle","CurrentSPEL0","CurrentSPELx","Fiq","Info","Irq","Kind","LowerAArch32","LowerAArch64","RET_TO_REC","RET_TO_RMM","SError","Source","Synchronous","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","fmt","fmt","fmt","from","from","from","handle_exception","handle_lower_exception","into","into","into","syndrome","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","AccessFlag","AddressSize","Alignment","Brk","DataAbort","Fault","HVC","InstructionAbort","Other","Other","PCAlignmentFault","Permission","SMC","SPAlignmentFault","Syndrome","SysRegInst","TLBConflict","Translation","Unknown","WFX","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","fmt","fmt","from","from","from","from","into","into","into","into","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","level","level","level","level","GIC_FEATURES","GicFeatures","ICH_HCR_EL2_EOI_COUNT_MASK","ICH_HCR_EL2_NS_MASK","borrow","borrow","borrow_mut","borrow_mut","deref","from","from","init_gic","into","into","max_vintid","nr_aprs","nr_lrs","pri_res0_mask","receive_state_from_host","restore_state","save_state","send_state_to_host","try_from","try_from","try_into","try_into","type_id","type_id","Data","Delegated","GRANULE_MASK","GRANULE_SHIFT","GRANULE_SIZE","GranuleState","L0Table","L1Table","RD","RTT","Rec","RecAux","Undelegated","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","check_granule_parent","clone","clone_into","create_granule_status_table","entry","eq","fmt","from","from","from","inner","into","into","into","is_granule_aligned","is_not_in_realm","new","set_granule","set_granule_raw","set_granule_with_parent","to_owned","to_rmi_result","translation","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","validate_addr","Entry","Granule","Inner","addr","address","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","check_parent","clear","clone","clone_into","from","from","from","index","into","into","into","is_valid","lock","mut_pte","new","points_to_table_or_page","pte","set","set_parent","set_state","set_with_page_table_flags","set_with_page_table_flags_via_alloc","state","subtable","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","DRAM_SIZE","GRANULE_STATUS_TABLE","GranuleSize","GranuleStatusTable","L0_TABLE_ENTRY_SIZE_RANGE","L1PageTable","L1_TABLE_ENTRY_SIZE_RANGE","add_l1_table","addr_to_idx","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","from","from","get_l1_table_addr","into","into","new","root_pgtlb","set_granule","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","Accessor","DataPage","acquire","as_mut_ptr","as_ptr","as_slice","borrow","borrow_mut","clone","clone_into","default","from","into","pointer","release","to_owned","try_from","try_into","type_id","validate","Pointer","PointerGuard","PointerMut","PointerMutGuard","acquire","acquire","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","deref","deref","deref_mut","drop","drop","from","from","from","from","into","into","into","into","new","new","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","ConsoleWriter","Device","Error","ErrorKind","Result","Stdout","Write","attach","borrow","borrow_mut","from","initialize","initialized","into","new","stdout","try_from","try_into","type_id","write_all","write_all","register_global_logger","page","page_table","translation","BasePageSize","borrow","borrow_mut","clone","clone_into","from","into","to_owned","try_from","try_into","type_id","L0Table","L1Table","L2Table","L3Table","attr","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","entry","from","from","from","from","into","into","into","into","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","mair_idx","page_type","permission","shareable","DEVICE_MEM","RMM_MEM","RW_DATA","BLOCK","TABLE_OR_PAGE","RO","RW","INNER","NONE","OUTER","ADDR_BLK_L1","ADDR_BLK_L2","ADDR_TBL_OR_PAGE","AF","AP","Entry","INDX","NS","PTDesc","PXN","Reserved","SH","TYPE","UXN","VALID","address","borrow","borrow","borrow_mut","borrow_mut","clear","clear_bits","clone","clone","clone_into","clone_into","from","from","get","get_masked","get_masked_value","get_mut","index","into","into","is_valid","mut_pte","new","new","points_to_table_or_page","pte","set","set","set_bits","set_masked","set_masked_value","set_with_page_table_flags","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","ALIGN_ROOT_PAGE","NUM_ROOT_PAGE","PageTable","borrow","borrow_mut","from","get_page_table","get_ref","into","map","try_from","try_into","type_id","unmap","emulate_mmio","halt","panic_handler","Active","New","Null","Realm","State","SystemOff","borrow","borrow","borrow_mut","borrow_mut","config","context","drop","fmt","fmt","from","from","into","into","measurements","mm","new","page_table","registry","state","timer","try_from","try_from","try_into","try_into","type_id","type_id","vcpu","vcpus","vmid","RealmConfig","borrow","borrow_mut","from","init","into","realm_config","try_from","try_into","type_id","Context","GICRegister","SystemRegister","TimerRegister","actlr","afsr0","afsr1","amair","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cnthctl_el2","cntkctl","cntp_ctl_el0","cntp_cval_el0","cntpoff_el2","cntv_ctl_el0","cntv_cval_el0","cntvoff_el2","contextidr","cpacr","csselr","default","default","default","default","elr","esr_el1","esr_el2","far","fmt","fmt","fmt","fmt","fp_regs","from","from","from","from","from_current","get_reg","gic_state","gp_regs","hpfar","ich_ap0r_el2","ich_ap1r_el2","ich_hcr_el2","ich_lr_el2","ich_misr_el2","ich_vmcr_el2","into","into","into","into","into_current","mair","new","par","sctlr","set_reg","sp","sp_el0","spsr","sys_regs","tcr","timer","tpidr","tpidr_el0","tpidrro","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","ttbr0","ttbr1","type_id","type_id","type_id","type_id","vbar","vmpidr","vttbr","IPATranslation","address","clean","get_base_address","ipa_to_pa","ipa_to_pte","ipa_to_pte_set","page","page_table","stage2_translation","stage2_tte","translation_granule_4k","GuestPhysAddr","PhysAddr","add","add","add_assign","add_assign","as_u64","as_u64","as_usize","as_usize","bitand","bitand","bitor","bitor","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","cmp","eq","eq","fmt","fmt","from","from","from","from","from","from","from","from","from","from","into","into","into","into","into","into","partial_cmp","partial_cmp","sub","sub","sub_assign","sub_assign","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","zero","zero","BasePageSize","HugePageSize","LargePageSize","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","from","from","from","into","into","into","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","L0Table","L1Table","L2Table","L3Table","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","entry","from","from","from","from","into","into","into","into","pte","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","Entry","address","borrow","borrow_mut","clear","clone","clone_into","from","index","into","is_valid","mut_pte","new","points_to_table_or_page","pte","set","set_with_page_table_flags","to_owned","try_from","try_into","type_id","attribute","page_type","permission","shareable","DEVICE_NGNRE","FWB_RESERVED","NORMAL","NORMAL_FWB","NORMAL_NC","BLOCK","TABLE_OR_PAGE","NONE","RO","RW","WO","INNER","NON_SHAREABLE","OUTER","RESERVED","ALIGN_ROOT_PAGE","IPA","NS","NUM_ROOT_PAGE","Stage2Translation","TLBI_OP","TTL","borrow","borrow","borrow_mut","borrow_mut","clean","clear_bits","clone","clone_into","fmt","from","from","get","get_base_address","get_masked","get_masked_value","get_mut","into","into","ipa_to_pa","ipa_to_pte","ipa_to_pte_set","new","new","set","set_bits","set_masked","set_masked_value","tlbi_ns","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","IPAS_NS","IPAS_S","ADDR_FULL","ADDR_L0_PAGE","ADDR_L1_PAGE","ADDR_L2_PAGE","ADDR_L3_PAGE","AF","AP","DESC_TYPE","INVALID_HIPAS","INVALID_RIPAS","INVALID_UNPROTECTED","MEMATTR","NS","PAGE_FLAGS","RttPage","S2TTE","SH","XN","address","borrow","borrow","borrow_mut","borrow_mut","clear_bits","clone","clone","clone_into","clone_into","desc_type","from","from","from","get","get","get_masked","get_masked_value","get_mut","get_mut","get_ripas","get_s2tte","into","into","invalid_hipas","invalid_ripas","is_assigned","is_destroyed","is_host_ns_valid","is_invalid_ripas","is_table","is_unassigned","is_valid","len","new","set","set_bits","set_masked","set_masked_value","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","L012_BLOCK","L012_TABLE","L3_PAGE","LX_INVALID","ASSIGNED","DESTROYED","UNASSIGNED","EMPTY","RAM","ADDR_BLK_L1","ADDR_BLK_L2","ADDR_TBL_OR_PAGE","AF","ATTR","CONT","NS","RawPTE","S2AP","SH","TYPE","VALID","XN","borrow","borrow_mut","clear_bits","clone","clone_into","from","get","get_masked","get_masked_value","get_mut","into","new","set","set_bits","set_masked","set_masked_value","to_owned","try_from","try_into","type_id","RMS","get_realm","init_timer","restore_state","save_state","send_state_to_host","set_cnthctl","Context","Null","Ready","Running","State","VCPU","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","context","create_vcpu","current","drop","fmt","fmt","from","from","from_current","from_current","into","into","into_current","into_current","is_realm_dead","new","new","pcpu","realm","remove","state","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","ABI_MAJOR_VERSION","ABI_MINOR_VERSION","BOOT_COMPLETE","BOOT_SUCCESS","DATA_CREATE","DATA_CREATE_UNKNOWN","DATA_DESTROY","DEVICE","ERROR_INPUT","ERROR_REC","EXIT_FIQ","EXIT_HOST_CALL","EXIT_IRQ","EXIT_PSCI","EXIT_RIPAS_CHANGE","EXIT_SERROR","EXIT_SYNC","FEATURES","GET_PLAT_TOKEN","GET_REALM_ATTEST_KEY","GRANULE_DELEGATE","GRANULE_UNDELEGATE","HASH_ALGO_SHA256","HASH_ALGO_SHA512","MAX_REC_AUX_GRANULES","MapProt","NOT_SUPPORTED_YET","NS_PAS","REALM_ACTIVATE","REALM_CREATE","REALM_DESTROY","REC_AUX_COUNT","REC_CREATE","REC_DESTROY","REC_ENTER","REQ_COMPLETE","RET_EXCEPTION_IL","RET_EXCEPTION_IRQ","RET_EXCEPTION_SERROR","RET_EXCEPTION_TRAP","RET_FAIL","RTT_CREATE","RTT_DESTROY","RTT_INIT_RIPAS","RTT_MAP_UNPROTECTED","RTT_READ_ENTRY","RTT_SET_RIPAS","RTT_UNMAP_UNPROTECTED","SUCCESS","SUCCESS_REC_ENTER","VERSION","borrow","borrow_mut","constraint","error","features","from","from","get","gpt","into","is_set","new","realm","rec","rtt","rtt_entry_state","set_bit","to_str","try_from","try_into","type_id","version","Constraint","arg_num","borrow","borrow_mut","clone","clone_into","cmd","default","from","into","new","ret_num","to_owned","try_from","try_into","type_id","validate","Error","InternalError","InvalidMeasurementIndex","MeasurementError","NotExistRealm","NotExistVCPU","RmiErrorCount","RmiErrorInUse","RmiErrorInput","RmiErrorOthers","RmiErrorRealm","RmiErrorRec","RmiErrorRtt","borrow","borrow","borrow_mut","borrow_mut","fmt","fmt","from","from","from","from","into","into","try_from","try_from","try_into","try_into","type_id","type_id","ipa_bits","set_event_handler","validate","set_event_handler","Rd","addr_in_par","at_state","borrow","borrow_mut","fmt","from","hash_algo","id","inc_rec_index","init","into","ipa_bits","rec_index","rtt_base","s2_starting_level","set_event_handler","set_hash_algo","set_state","state","try_from","try_into","type_id","AttestInProgress","NoAttestInProgress","Rec","RmmRecAttestState","attest_challenge","attest_state","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","eq","exit","fmt","fmt","from","from","get_state","handlers","host_call_pending","inc_ripas_addr","init","into","into","ipa_bits","mpidr","owner","params","realmid","ripas_addr","ripas_end","ripas_state","run","run","runnable","set_attest_challenge","set_attest_state","set_event_handler","set_host_call_pending","set_ripas","set_state","set_vtcr","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vcpuid","vtcr","vtcr","handle_realm_exit","set_event_handler","AFF0","AFF1","AFF2","AFF3","MPIDR","borrow","borrow_mut","clear_bits","clone","clone_into","from","from","get","get_masked","get_masked_value","get_mut","index","into","new","set","set_bits","set_masked","set_masked_value","to_owned","try_from","try_into","type_id","validate","Params","aux","borrow","borrow_mut","default","flags","fmt","from","gprs","into","mpidr","num_aux","pc","try_from","try_into","type_id","validate","validate_aux","NR_GPRS","REC_ENTRY_FLAG_EMUL_MMIO","REC_ENTRY_FLAG_INJECT_SEA","REC_ENTRY_FLAG_TRAP_WFE","REC_ENTRY_FLAG_TRAP_WFI","Run","borrow","borrow_mut","default","drop","entry_flags","entry_gic_hcr","entry_gic_lrs","entry_gpr","exit_gic_lrs_mut","fmt","from","into","set_cntp_ctl","set_cntp_cval","set_cntv_ctl","set_cntv_cval","set_esr","set_exit_reason","set_far","set_gic_hcr","set_gic_lrs","set_gic_misr","set_gic_vmcr","set_gpr","set_hpfar","set_imm","set_ripas","try_from","try_into","type_id","validate","activate_stage2_mmu","prepare_vtcr","RTT_MIN_BLOCK_LEVEL","RTT_PAGE_LEVEL","S2TTE_STRIDE","is_protected_ipa","realm_par_size","set_event_handler","validate_ipa","RMI_ASSIGNED","RMI_DESTROYED","RMI_TABLE","RMI_UNASSIGNED","RMI_VALID_NS","set_event_handler","ABI_VERSION","ATTEST_TOKEN_CONTINUE","ATTEST_TOKEN_INIT","ERROR_INPUT","ERROR_STATE","HOST_CALL","INCOMPLETE","IPA_STATE_GET","IPA_STATE_SET","MEASUREMENT_EXTEND","MEASUREMENT_READ","REALM_CONFIG","SUCCESS","VERSION","attestation","constraint","do_host_call","error","hostcall","measurement","psci","set_event_handler","to_str","Attestation","borrow","borrow_mut","claims","create_attestation_token","default","fmt","from","get_token","into","new","try_from","try_into","type_id","CHALLENGE_LABEL","Challenge","Claim","Data","EXTENSIBLE_MEASUREMENTS_LABEL","HASH_ALGO_ID_LABEL","HashAlgo","INITIAL_MEASUREMENT_LABEL","MeasurementEntry","PERSONALIZATION_VALUE_LABEL","PUBLIC_KEY_HASH_ALOG_ID_LABEL","PUBLIC_KEY_LABEL","PersonalizationValue","RAKPubKey","REM_SLOT_NR","REMs","RIM","RealmClaims","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","challenge","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","default","fmt","fmt","fmt","fmt","from","from","from","from","from_slice","init","into","into","into","into","measurement_hash_algo","personalization_value","rak_pub","rak_pub_hash_algo","rems","rim","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","validate","Error","InvalidMeasurementIndex","MeasurementError","RealmDoesNotExists","borrow","borrow_mut","fmt","from","into","try_from","try_into","type_id","HOST_CALL_NR_GPRS","HostCall","borrow","borrow_mut","drop","fmt","from","imm","into","parse","parse_mut","set_gpr","try_from","try_into","type_id","extend","read","AFFINITY_INFO","AFFINITY_INFO","CPU_OFF","CPU_ON","CPU_ON","CPU_SUSPEND","CPU_SUSPEND","FEATURES","PSCI_VERSION","SMC32","SMC64","SMCCC_ARCH_FEATURES","SMCCC_VERSION","SYSTEM_OFF","SYSTEM_RESET","borrow","borrow","borrow_mut","borrow_mut","from","from","into","into","set_event_handler","try_from","try_from","try_into","try_into","type_id","type_id","create","data_create","data_destroy","destroy","get_ripas","init_ripas","make_exclusive","make_shared","map_unprotected","read_entry","unmap_unprotected"],"q":[[0,"islet_rmm"],[37,"islet_rmm::allocator"],[39,"islet_rmm::asm"],[42,"islet_rmm::config"],[53,"islet_rmm::cpu"],[55,"islet_rmm::error"],[83,"islet_rmm::event"],[115,"islet_rmm::event::mainloop"],[131,"islet_rmm::event::realmexit"],[163,"islet_rmm::event::rsihandle"],[179,"islet_rmm::exception"],[182,"islet_rmm::exception::lower"],[183,"islet_rmm::exception::lower::synchronous"],[184,"islet_rmm::exception::lower::synchronous::sys_reg"],[185,"islet_rmm::exception::trap"],[234,"islet_rmm::exception::trap::syndrome"],[280,"islet_rmm::exception::trap::syndrome::Fault"],[284,"islet_rmm::gic"],[312,"islet_rmm::granule"],[364,"islet_rmm::granule::entry"],[409,"islet_rmm::granule::translation"],[439,"islet_rmm::host"],[459,"islet_rmm::host::pointer"],[500,"islet_rmm::io"],[521,"islet_rmm::logger"],[522,"islet_rmm::mm"],[525,"islet_rmm::mm::page"],[536,"islet_rmm::mm::page_table"],[570,"islet_rmm::mm::page_table::attr"],[574,"islet_rmm::mm::page_table::attr::mair_idx"],[577,"islet_rmm::mm::page_table::attr::page_type"],[579,"islet_rmm::mm::page_table::attr::permission"],[581,"islet_rmm::mm::page_table::attr::shareable"],[584,"islet_rmm::mm::page_table::entry"],[639,"islet_rmm::mm::translation"],[653,"islet_rmm::mmio"],[654,"islet_rmm::panic"],[656,"islet_rmm::realm"],[691,"islet_rmm::realm::config"],[701,"islet_rmm::realm::context"],[792,"islet_rmm::realm::mm"],[804,"islet_rmm::realm::mm::address"],[864,"islet_rmm::realm::mm::page"],[897,"islet_rmm::realm::mm::page_table"],[931,"islet_rmm::realm::mm::page_table::entry"],[952,"islet_rmm::realm::mm::page_table::pte"],[956,"islet_rmm::realm::mm::page_table::pte::attribute"],[961,"islet_rmm::realm::mm::page_table::pte::page_type"],[963,"islet_rmm::realm::mm::page_table::pte::permission"],[967,"islet_rmm::realm::mm::page_table::pte::shareable"],[971,"islet_rmm::realm::mm::stage2_translation"],[1013,"islet_rmm::realm::mm::stage2_translation::tlbi_ns"],[1015,"islet_rmm::realm::mm::stage2_tte"],[1080,"islet_rmm::realm::mm::stage2_tte::desc_type"],[1084,"islet_rmm::realm::mm::stage2_tte::invalid_hipas"],[1087,"islet_rmm::realm::mm::stage2_tte::invalid_ripas"],[1089,"islet_rmm::realm::mm::translation_granule_4k"],[1122,"islet_rmm::realm::registry"],[1124,"islet_rmm::realm::timer"],[1129,"islet_rmm::realm::vcpu"],[1169,"islet_rmm::rmi"],[1242,"islet_rmm::rmi::constraint"],[1259,"islet_rmm::rmi::error"],[1290,"islet_rmm::rmi::features"],[1293,"islet_rmm::rmi::gpt"],[1294,"islet_rmm::rmi::realm"],[1317,"islet_rmm::rmi::rec"],[1370,"islet_rmm::rmi::rec::exit"],[1371,"islet_rmm::rmi::rec::handlers"],[1372,"islet_rmm::rmi::rec::mpidr"],[1400,"islet_rmm::rmi::rec::params"],[1418,"islet_rmm::rmi::rec::run"],[1455,"islet_rmm::rmi::rec::vtcr"],[1457,"islet_rmm::rmi::rtt"],[1464,"islet_rmm::rmi::rtt_entry_state"],[1469,"islet_rmm::rmi::version"],[1470,"islet_rmm::rsi"],[1493,"islet_rmm::rsi::attestation"],[1507,"islet_rmm::rsi::attestation::claims"],[1579,"islet_rmm::rsi::constraint"],[1580,"islet_rmm::rsi::error"],[1592,"islet_rmm::rsi::hostcall"],[1607,"islet_rmm::rsi::measurement"],[1609,"islet_rmm::rsi::psci"],[1639,"islet_rmm::rtt"],[1650,"core::fmt"],[1651,"core::fmt"],[1652,"core::any"],[1653,"core::ops::function"],[1654,"core::ops::function"],[1655,"core::option"],[1656,"vmsa::guard"],[1657,"alloc::boxed"],[1658,"spinning_top::spinlock"],[1659,"log"],[1660,"core::panic::panic_info"],[1661,"core::fmt"],[1662,"alloc::sync"],[1663,"core::default"],[1664,"core::ffi"],[1665,"core::cmp"],[1666,"core::fmt"],[1667,"spin"],[1668,"core::ops::function"],[1669,"core::clone"],[1670,"core::marker"]],"d":["","","","","","","","","","","","","","","","Safety / Usage: “granule transaction” a set of APIs …","get_granule_if!(addr: a physical address, state: a granule …","","","","","","","","","","","","","","","","Call <code>rmm_exit</code> within <code>exception/vectors.s</code> and jumps to EL1.","","","set_state_and_get_granule!(addr: a physical address, …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","Fault Status Code only for the ‘RecExitReason::Sync’ it…","","","","","","Handles ‘RET_TO_RMM’ cases from …","","","","","","","","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","This function is called when an exception occurs from …","This function is called when an exception occurs from …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","The Level 0 Table Each entry (L1table) covers 4mb. This is …","The Level 1 Table Each entry covers PAGE_SIZE (4kb).","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","This is the only function that doesn’t take <code>Inner</code> as …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","This trait is used to enforce security checks for physical …","DataPage is used to convey realm data from host to realm.","Try to do page-relevant stuff (e.g., RMM map). returns …","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","Try to clean up page-relevant stuff done by <code>acquire</code>. …","","","","","Validate each field in a struct that implements this trait.","Type for holding an immutable pointer to physical region …","Guard for <code>Pointer</code>","Type for holding a mutable pointer to physical region …","","Checks if this pointer is valid. It goes through two …","","","","","","","","","","Safety: this is safe because the only safe way to get this …","","","Automatically clean up page-relevant stuff we did in …","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Creates a new pointer pointing to data shared between the …","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","A 4 KiB page mapped in the L3Table.","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","The Level 0 Table","The Level 1 Table","The Level 2 Table","The Level 3 Table (Doesn’t have Subtable!)","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","Generic Interrupt Controller Registers","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","A 4 KiB page mapped in the L3Table.","A 1 GiB page mapped in the L1Table.","A 2 MiB page mapped in the L2Table.","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","The Level 0 Table","The Level 1 Table","The Level 2 Table","The Level 3 Table (Doesn’t have Subtable!)","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Retrieves Page Table Entry (PA) from Intermediate Physical …","Retrieves Page Table Entry (PTE) from Intermediate …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","Whether the host has completed emulation for an Emulatable …","Whether to inject a Synchronous External Abort (SEA) into …","Whether to trap WFE execution by the Realm. val 0: Trap is …","Whether to trap WFI execution by the Realm. val 0: Trap is …","The structure holds data passsed between the Host and the …","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,4,4,4,4,8,4,8,4,4,4,4,8,4,8,4,8,8,8,4,4,8,4,8,4,8,0,0,0,0,0,0,0,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,0,11,11,0,0,0,11,11,11,11,0,0,15,15,15,15,15,15,15,15,15,15,15,15,15,15,18,0,17,17,18,17,18,0,17,17,17,18,17,18,17,18,17,18,17,17,18,18,17,17,18,18,17,18,17,18,17,18,0,20,20,20,0,20,20,20,20,20,20,20,20,20,20,20,0,0,0,0,0,0,26,26,27,0,27,0,26,26,0,0,27,0,27,26,27,28,26,27,28,26,27,28,26,27,28,26,27,28,26,27,28,0,0,26,27,28,0,26,27,28,26,27,28,26,27,28,26,27,28,30,30,30,31,31,0,31,31,30,31,31,30,31,31,0,31,30,30,31,31,30,31,30,31,30,31,30,31,30,31,30,30,31,31,30,30,31,31,30,31,30,31,30,31,30,31,112,113,114,115,0,0,0,0,33,32,33,32,32,33,32,0,33,32,33,33,33,33,0,0,0,0,33,32,33,32,33,32,36,36,0,0,0,0,0,0,36,36,36,36,36,116,117,36,116,117,36,0,36,36,0,0,36,36,116,117,36,36,116,117,36,0,0,36,0,0,0,36,0,0,116,117,36,116,117,36,116,117,36,0,0,0,0,35,38,118,35,38,118,35,38,35,38,35,35,118,35,38,38,118,35,38,38,38,38,38,38,38,38,35,35,38,38,35,38,35,118,35,38,118,35,38,118,35,38,0,0,0,0,0,0,0,0,0,43,42,43,42,42,42,43,42,0,43,42,43,43,43,42,43,42,43,42,43,42,0,0,46,44,44,44,44,44,44,44,44,44,44,0,46,44,44,44,44,46,0,0,0,0,47,49,47,48,49,50,47,48,49,50,48,50,50,48,50,47,48,49,50,47,48,49,50,47,49,47,48,49,50,47,48,49,50,47,48,49,50,0,0,0,0,0,0,0,51,51,51,51,119,119,51,51,0,51,51,51,120,51,0,0,0,0,0,57,57,57,57,57,57,57,57,57,57,0,0,0,0,0,121,122,123,124,121,122,123,124,0,121,122,123,124,121,122,123,124,121,122,123,124,121,122,123,124,121,122,123,124,0,0,0,0,0,0,0,0,0,0,0,0,0,0,59,59,59,59,59,0,59,59,0,59,59,59,59,59,59,58,59,58,59,58,58,59,59,58,59,58,59,58,59,59,59,59,58,59,58,58,58,59,58,58,58,59,58,59,59,59,58,59,58,59,58,59,58,59,58,0,0,0,60,60,60,0,60,60,60,60,60,60,60,0,0,0,66,66,66,0,0,66,64,66,64,66,0,0,64,64,66,64,66,64,66,64,0,64,64,0,64,0,64,66,64,66,64,66,0,64,64,0,125,125,125,125,125,0,125,125,125,0,0,0,0,73,73,73,73,24,72,73,74,24,72,73,74,74,73,74,74,74,74,74,74,73,73,73,24,72,73,74,24,73,73,73,24,72,73,74,24,24,72,73,74,24,0,24,24,73,72,72,72,72,72,72,24,72,73,74,24,73,24,73,73,0,73,73,24,24,73,24,73,73,73,24,72,73,74,24,72,73,74,73,73,24,72,73,74,73,73,73,0,0,68,68,68,68,68,0,0,0,0,0,0,0,39,76,39,76,39,76,39,76,39,76,39,76,39,76,39,76,39,76,39,76,39,76,39,76,39,76,39,39,39,39,39,76,76,76,76,76,39,39,39,76,76,76,39,76,39,76,39,76,39,76,39,76,39,76,39,76,39,76,0,0,0,79,80,81,79,80,81,79,80,81,79,80,81,79,80,81,79,80,81,79,80,81,79,80,81,79,80,81,79,80,81,0,0,0,0,126,127,128,129,126,127,128,129,0,126,127,128,129,126,127,128,129,0,126,127,128,129,126,127,128,129,126,127,128,129,0,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,84,84,0,0,0,84,83,84,83,84,83,84,84,84,83,83,84,84,83,84,84,84,83,84,83,83,83,83,84,84,84,84,84,0,84,83,84,83,84,83,84,0,0,85,85,85,85,85,85,85,85,85,85,0,85,85,85,0,0,85,85,85,86,85,86,85,85,86,85,86,85,0,86,85,85,86,85,85,85,86,85,85,85,86,85,0,0,85,85,85,85,85,85,85,86,85,85,85,85,85,86,85,86,85,86,85,86,85,0,0,0,0,0,0,0,0,0,87,87,87,87,87,87,87,0,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,0,0,0,0,0,0,0,0,88,88,88,0,0,25,88,25,88,88,88,25,0,0,25,25,88,25,88,63,25,25,88,63,25,25,63,25,25,25,0,25,88,25,88,25,88,25,88,0,0,0,0,0,0,0,91,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,91,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,91,91,0,0,0,91,91,91,0,91,91,91,0,0,0,0,91,0,91,91,91,0,0,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,0,0,0,95,95,95,95,34,34,34,34,34,34,34,34,95,34,95,34,95,34,34,34,95,34,95,34,95,34,95,34,95,0,0,0,0,0,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,0,97,97,97,97,97,97,99,99,0,0,22,22,99,22,99,22,99,99,99,0,99,22,99,22,22,0,22,22,22,99,22,22,0,22,0,22,22,22,22,0,0,22,22,22,0,22,22,22,22,99,99,22,99,22,99,22,22,0,22,0,0,100,100,100,100,0,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,0,0,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,0,0,0,0,0,0,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,102,102,0,102,102,102,102,0,102,102,102,102,102,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,104,106,107,108,104,106,107,108,108,104,106,107,108,104,106,107,108,104,104,106,107,108,104,106,107,108,106,108,104,106,107,108,108,108,108,108,108,108,104,106,107,108,104,106,107,108,104,106,107,108,104,106,107,108,0,0,96,96,96,96,96,96,96,96,96,96,96,0,0,111,111,111,111,111,111,111,111,111,111,111,111,111,0,0,130,131,130,130,131,130,131,130,0,0,0,0,0,130,130,130,131,130,131,130,131,130,131,0,130,131,130,131,130,131,0,0,0,0,0,0,0,0,0,0,0],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[[2,[1]]],[[2,[1]]]],0,0,0,[1],[[],1],[[]],0,[[1,1]],[[1,[3,[1]]],[[2,[1]]]],0,0,0,0,0,0,0,0,0,0,0,[[],1],[[]],0,0,0,0,0,0,[[]],[[]],[[]],[[]],[4,4],[[]],[[4,4],5],[[4,6],7],[[8,6],7],[[]],[[]],[[]],[[]],[8,4],[4,8],[[]],[[],9],[[],9],[[],9],[[],9],[[],10],[[],10],0,0,0,0,0,0,0,[11,[[3,[1]]]],[[]],[[]],[11,11],[[]],[11,12],[[],11],[[11,13]],[[11,14]],[[]],[[11,[3,[1]]]],[[11,[3,[1]]]],[[]],0,[12,11],0,[[11,1]],[11,[[3,[1]]]],0,0,0,[[]],[[],9],[[],9],[[],10],0,0,[[15,1,16]],[15],[[]],[[]],[[15,11]],[[]],[[]],[[],15],0,0,0,[[],9],[[],9],[[],10],0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[17,6],7],[[18,6],7],[[]],[1,17],[1,18],[[]],[[]],[17,19],[18,19],[[]],[[],9],[[],9],[[],9],[[],9],[[],10],[[],10],0,0,0,0,0,[[20,1,21]],[[]],[[]],0,[[]],[[]],[[],20],0,[[],9],[[],9],[[],10],0,0,0,0,0,[[[25,[24]],19],19],0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[26,26],[27,27],[28,28],[[]],[[]],[[]],[[26,6],7],[[27,6],7],[[28,6],7],[[]],[[]],[[]],0,0,[[]],[[]],[[]],0,[[]],[[]],[[]],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],10],[[],10],[[],10],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[30,30],[31,31],[[]],[[]],[[30,6],7],[[31,6],7],[29,30],[[]],[29,31],[[]],[30,19],[[]],[31,19],[[]],[[]],[[]],[[],9],[[],9],[[],9],[[],9],[[],10],[[],10],0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[32,33],[[]],[[]],[[[25,[24]]]],[[]],[[]],0,0,0,0,[[1,1,23],[[9,[34]]]],[[[25,[24]]]],[[[25,[24]]]],[[1,1,23],[[9,[34]]]],[[],9],[[],9],[[],9],[[],9],[[],10],[[],10],0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[35,35],[[9,[34]]]],[36,36],[[]],[[]],0,[[36,36],5],[[36,6],7],[[]],[[]],[[]],0,[[]],[[]],[[]],[1,5],[1,5],[19,36],[[35,19],[[9,[34]]]],[[1,19],[[9,[37]]]],[[35,35,19],[[9,[34]]]],[[]],[[[9,[37]]],[[9,[34]]]],0,[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],10],[[],10],[[],10],[1,5],0,0,0,[35,1],[[38,1],[[40,[39]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[35,35],[[9,[37]]]],[38],[35,35],[[]],[[]],[[]],[[]],[1,1],[[]],[[]],[[]],[38,5],[38,[[9,[[40,[41]],37]]]],[38],[[],38],[38,5],[38,19],[[38,39,19,5],[[9,[37]]]],[[35,35],[[9,[37]]]],[[35,39,19],[[9,[37]]]],[[38,39],[[9,[37]]]],[[38,1,14],[[9,[37]]]],[35,19],[[38,1,1],[[9,[1,37]]]],[[]],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],10],[[],10],[[],10],0,0,0,0,0,0,0,[1,[[9,[1,37]]]],[1,[[9,[1,37]]]],[[]],[[]],[[]],[[]],[42,42],[[]],[[]],[[]],[1,[[9,[1,37]]]],[[]],[[]],[[],43],0,[[43,1,19],[[9,[37]]]],[[]],[[],9],[[],9],[[],9],[[],9],[[],10],[[],10],0,0,[1,5],[44,45],[44,45],[44,[[3,[45]]]],[[]],[[]],[44,44],[[]],[[],44],[[]],[[]],0,[1,5],[[]],[[],9],[[],9],[[],10],[[],5],0,0,0,0,[[[47,[46]]],[[40,[[48,[46]]]]]],[[[49,[46]]],[[40,[[50,[46]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[48,[46]]]],[[[50,[46]]]],[[[50,[46]]]],[[[48,[46]]]],[[[50,[46]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1,[[47,[46]]]],[1,[[49,[46]]]],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],10],[[],10],[[],10],[[],10],0,0,0,0,0,0,0,[[51,[53,[52]]],54],[[]],[[]],[[]],[[],54],[[],5],[[]],[[],51],[[],[[55,[51]]]],[[],9],[[],9],[[],10],[[[3,[45]]],54],[[51,[3,[45]]],54],[56],0,0,0,0,[[]],[[]],[57,57],[[]],[[]],[[]],[[]],[[],9],[[],9],[[],10],0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],10],[[],10],[[],10],[[],10],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[58,1],[[40,[39]]]],[[]],[[]],[[]],[[]],[58],[[59,19],59],[59,59],[58,58],[[]],[[]],[[]],[[]],[59,19],[[59,19],19],[[59,19],19],[59,59],[1,1],[[]],[[]],[58,5],[58],[19,59],[[],58],[58,5],[58,19],[[59,19],59],[[58,39,19,5],[[9,[37]]]],[[59,19],59],[[59,19,19],59],[[59,19,19],59],[[58,39],[[9,[37]]]],[[]],[[]],[[],9],[[],9],[[],9],[[],9],[[],10],[[],10],0,0,0,[[]],[[]],[[]],[[],19],[[],60],[[]],[[60,1,5],5],[[],9],[[],9],[[],10],[[60,1],5],[[1,1,23],[[9,[34]]]],[[],61],[62,61],0,0,0,0,0,0,[[]],[[]],[[]],[[]],0,0,[[[64,[63]]]],[[[64,[[0,[65,63]]]],6],7],[[66,6],7],[[]],[[]],[[]],[[]],0,0,[[1,67,[70,[[69,[[53,[68]]]]]]],[[70,[[69,[[64,[[0,[63,71]]]]]]]]]],0,0,0,0,[[],9],[[],9],[[],9],[[],9],[[],10],[[],10],0,0,0,0,[[]],[[]],[[]],[[1,1]],[[]],[[1,1,1],[[9,[34]]]],[[],9],[[],9],[[],10],0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,[[],24],[[],72],[[],73],[[],74],0,0,0,0,[[24,6],7],[[72,6],7],[[73,6],7],[[74,6],7],0,[[]],[[]],[[]],[[]],[[[25,[24]]]],[[1,1,1],[[9,[1,34]]]],0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[[25,[24]]]],0,[[],24],0,0,[[1,1,1,1],[[9,[34]]]],0,0,0,0,0,0,0,0,0,[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],0,0,[[],10],[[],10],[[],10],[[],10],0,0,0,0,0,[[]],[[],75],[[76,1],[[40,[39]]]],[[76,1],40],[[76,1,19],[[9,[34]]]],0,0,0,0,0,0,0,[[39,39],39],[[76,76],76],[[39,39]],[[76,76]],[39,19],[76,19],[39,1],[76,1],[[39,39],39],[[76,76],76],[[39,39],39],[[76,76],76],[[]],[[]],[[]],[[]],[39,39],[76,76],[[]],[[]],[[39,39],77],[[76,76],77],[[39,39],5],[[76,76],5],[[39,6],[[9,[78]]]],[[76,6],7],[[]],[1,39],[19,39],[[],39],[[],39],[[]],[[],76],[1,76],[19,76],[[],76],[39,19],[39,1],[[]],[76,19],[76,1],[[]],[[39,39],[[40,[77]]]],[[76,76],[[40,[77]]]],[[39,39],39],[[76,76],76],[[39,39]],[[76,76]],[[]],[[]],[[],9],[[],9],[[],9],[[],9],[[],10],[[],10],[[],39],[[],76],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[79,79],[80,80],[81,81],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],10],[[],10],[[],10],0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],10],[[],10],[[],10],[[],10],0,[[82,1],[[40,[39]]]],[[]],[[]],[82],[82,82],[[]],[[]],[1,1],[[]],[82,5],[82],[[],82],[82,5],[82,19],[[82,39,19,5],[[9,[37]]]],[[82,39],[[9,[37]]]],[[]],[[],9],[[],9],[[],10],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[83],[[84,19],84],[84,84],[[]],[[83,6],7],[[]],[[]],[84,19],[83,75],[[84,19],19],[[84,19],19],[84,84],[[]],[[]],[[83,76,1],[[40,[39]]]],[[83,76,1],40],[[83,76,1,19],[[9,[34]]]],[1,83],[19,84],[[84,19],84],[[84,19],84],[[84,19,19],84],[[84,19,19],84],0,[[]],[[],9],[[],9],[[],9],[[],9],[[],10],[[],10],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[85,1],[[40,[39]]]],[[]],[[]],[[]],[[]],[[85,19],85],[86,86],[85,85],[[]],[[]],0,[[]],[[]],[1,85],[[86,1],[[40,[19]]]],[85,19],[[85,19],19],[[85,19],19],[[86,1],[[40,[19]]]],[85,85],[85,19],[[1,1,1,34],[[9,[34]]]],[[]],[[]],0,0,[85,5],[85,5],[[85,1],5],[85,5],[[85,1],5],[85,5],[[85,1,5],5],[86,1],[19,85],[[85,19],85],[[85,19],85],[[85,19,19],85],[[85,19,19],85],[[]],[[]],[[],9],[[],9],[[],9],[[],9],[[],10],[[],10],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[87,19],87],[87,87],[[]],[[]],[87,19],[[87,19],19],[[87,19],19],[87,87],[[]],[19,87],[[87,19],87],[[87,19],87],[[87,19,19],87],[[87,19,19],87],[[]],[[],9],[[],9],[[],10],0,[1,[[40,[[70,[[69,[[64,[24]]]]]]]]]],[[[25,[24]]]],[[[25,[24]]]],[[[25,[24]]]],[[1,1,23],[[9,[34]]]],[[[25,[24]],19]],0,0,0,0,0,0,[[]],[[]],[[]],[[]],[88,88],[[]],0,[1,[[9,[1,34]]]],[[],[[40,[[25,[24]]]]]],[[[25,[63]]]],[[[25,[[0,[65,63]]]],6],7],[[88,6],7],[[]],[[]],[[[25,[89]]]],[[[25,[[0,[63,71]]]]]],[[]],[[]],[[[25,[89]]]],[[[25,[[0,[63,71]]]]]],[[[25,[[0,[63,71]]]]],5],[[],89],[[[70,[[90,[[64,[[0,[63,71]]]]]]]]],[[70,[[90,[[25,[[0,[63,71]]]]]]]]]],0,0,[1,[[9,[34]]]],0,[[]],[[],9],[[],9],[[],9],[[],9],[[],10],[[],10],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],0,0,0,[[]],[1,91],[91,1],0,[[]],[[91,19],5],[1,91],0,0,0,0,[[91,19]],[1,92],[[],9],[[],9],[[],10],0,0,0,[[]],[[]],[93,93],[[]],0,[[],93],[[]],[[]],[[12,1,1],93],0,[[]],[[],9],[[],9],[[],10],[[12,13,94]],0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[34,6],7],[[95,6],7],[37,34],[[]],[96,34],[[]],[[]],[[]],[[],9],[[],9],[[],9],[[],9],[[],10],[[],10],[1,1],[15],[1,5],[15],0,[[97,1],5],0,[[]],[[]],[[97,6],7],[[]],[97,45],[97,1],[97],[[97,1,1,1,98]],[[]],[97,1],[97,1],[97,1],[97,98],[15],[[97,45]],0,0,[[],9],[[],9],[[],10],0,0,0,0,[22,[[3,[45]]]],[22,99],[[]],[[]],[[]],[[]],[99,99],[[]],[[99,99],5],0,[[99,6],7],[[22,6],7],[[]],[[]],[22,88],0,[22,5],[[22,19]],[[22,1,1,19],[[9,[34]]]],[[]],[[]],[22,[[9,[1,34]]]],0,[22,[[9,[1,34]]]],0,[22,[[9,[1,34]]]],[22,19],[22,19],[22,45],0,[[1,1,1],[[9,[[2,[1]],34]]]],[22,5],[[22,[3,[45]]]],[[22,99]],0,[[22,5]],[[22,19,19,19,45]],[[22,88]],[[22,19]],[[]],[[],9],[[],9],[[],9],[[],9],[[],10],[[],10],[22,1],0,[22,19],0,[15],0,0,0,0,0,[[]],[[]],[[100,19],100],[100,100],[[]],[19,100],[[]],[100,19],[[100,19],19],[[100,19],19],[100,100],[100,1],[[]],[19,100],[[100,19],100],[[100,19],100],[[100,19,19],100],[[100,19,19],100],[[]],[[],9],[[],9],[[],10],[19,5],0,0,[[]],[[]],[[],101],0,[[101,6],7],[[]],0,[[]],0,0,0,[[],9],[[],9],[[],10],[101,5],[[101,1,1,1],[[9,[34]]]],0,0,0,0,0,0,[[]],[[]],[[],23],[23],[23,19],[23,19],[23,[[2,[19]]]],[[23,1],[[9,[19,34]]]],[23,[[2,[19]]]],[[23,6],7],[[]],[[]],[[23,19]],[[23,19]],[[23,19]],[[23,19]],[[23,19]],[[23,45]],[[23,19]],[[23,19]],[[23,[3,[19]],1]],[[23,19]],[[23,19]],[[23,1,19],[[9,[34]]]],[[23,19]],[[23,67]],[[23,19,19,45]],[[],9],[[],9],[[],10],[23,5],[22],[97,[[9,[19,34]]]],0,0,0,[[1,1],5],[1,1],[15],[[1,1],[[9,[34]]]],0,0,0,0,0,[15],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[20],[1,92],0,[[]],[[]],0,[[102,[3,[45]],[3,[0]],45],[[103,[45]]]],[[],102],[[102,6],7],[[]],[[1,[3,[45]],[3,[0]],45],1],[[]],[[[3,[45]],[3,[45]]],102],[[],9],[[],9],[[],10],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[104,104],[[[106,[[0,[105,71]]]]],[[106,[[0,[105,71]]]]]],[[[107,[105]]],[[107,[105]]]],[108,108],[[]],[[]],[[]],[[]],[[],104],[[104,6],7],[[[106,[[0,[65,71]]]],6],7],[[[107,[65]],6],7],[[108,6],7],[[]],[[]],[[]],[[]],[[[3,[[0,[109,71]]]]],[[106,[[0,[109,71]]]]]],[[[3,[45]],[3,[45]],[3,[0]],110,[3,[45]],110],108],[[]],[[]],[[]],[[]],0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],10],[[],10],[[],10],[[],10],[[12,14]],0,0,0,0,[[]],[[]],[[96,6],7],[[]],[[]],[[],9],[[],9],[[],10],0,0,[[]],[[]],[111],[[111,6],7],[[]],[111,67],[[]],[1,111],[1,111],[[111,1,19],[[9,[34]]]],[[],9],[[],9],[[],10],[[1,1,13],[[9,[96]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[20],[[],9],[[],9],[[],9],[[],9],[[],10],[[],10],[[1,1,1,1],[[9,[34]]]],[[1,1,1],[[9,[34]]]],[[1,1],[[9,[1,34]]]],[[97,1,1,1],[[9,[34]]]],[[1,1,1],[[9,[19,34]]]],[[1,1,1],[[9,[34]]]],[[1,1,1],[[9,[34]]]],[[1,1,1],[[9,[34]]]],[[97,1,1,1],[[9,[34]]]],[[1,1,1],[[9,[[2,[1]],34]]]],[[1,1,1],[[9,[34]]]]],"c":[],"p":[[15,"usize"],[15,"array"],[15,"slice"],[4,"ErrorKind",55],[15,"bool"],[3,"Formatter",1650],[6,"Result",1650],[3,"Error",55],[4,"Result",1651],[3,"TypeId",1652],[3,"Context",83],[6,"Command",83],[8,"Fn",1653],[8,"FnMut",1653],[3,"Mainloop",115],[6,"Handler",115],[4,"RecExitReason",131],[4,"ExitSyncType",131],[15,"u64"],[3,"RsiHandle",163],[6,"Handler",163],[3,"Rec",1317],[3,"Run",1418],[3,"Context",701],[3,"VCPU",1129],[4,"Source",185],[4,"Kind",185],[3,"Info",185],[15,"u32"],[4,"Fault",234],[4,"Syndrome",234],[3,"GIC_FEATURES",284],[3,"GicFeatures",284],[4,"Error",1259],[3,"Inner",364],[3,"GranuleState",312],[4,"Error",1654],[3,"Entry",364],[3,"PhysAddr",804],[4,"Option",1655],[3,"EntryGuard",1656],[4,"GranuleSize",409],[3,"GranuleStatusTable",409],[3,"DataPage",439],[15,"u8"],[8,"Accessor",439],[3,"Pointer",459],[3,"PointerGuard",459],[3,"PointerMut",459],[3,"PointerMutGuard",459],[3,"Stdout",500],[8,"ConsoleWriter",500],[3,"Box",1657],[6,"Result",500],[6,"SpinlockGuard",1658],[4,"LevelFilter",1659],[4,"BasePageSize",525],[3,"Entry",584],[3,"PTDesc",584],[3,"PageTable",639],[15,"never"],[3,"PanicInfo",1660],[8,"Context",1129],[3,"Realm",656],[8,"Debug",1650],[4,"State",656],[15,"u16"],[8,"IPATranslation",792],[3,"Mutex",1661],[3,"Arc",1662],[8,"Default",1663],[3,"GICRegister",701],[3,"SystemRegister",701],[3,"TimerRegister",701],[4,"c_void",1664],[3,"GuestPhysAddr",804],[4,"Ordering",1665],[3,"Error",1650],[4,"BasePageSize",864],[4,"LargePageSize",864],[4,"HugePageSize",864],[3,"Entry",931],[3,"Stage2Translation",971],[3,"TLBI_OP",971],[3,"S2TTE",1015],[3,"RttPage",1015],[3,"RawPTE",1089],[4,"State",1129],[8,"Sized",1666],[6,"Mutex",1667],[3,"MapProt",1169],[15,"str"],[3,"Constraint",1242],[8,"FnOnce",1653],[4,"InternalError",1259],[4,"Error",1580],[3,"Rd",1294],[15,"isize"],[4,"RmmRecAttestState",1317],[3,"MPIDR",1372],[3,"Params",1400],[3,"Attestation",1493],[3,"Vec",1668],[3,"MeasurementEntry",1507],[8,"Clone",1669],[3,"Data",1507],[3,"Claim",1507],[3,"RealmClaims",1507],[8,"Copy",1666],[3,"String",1670],[3,"HostCall",1592],[13,"AddressSize",280],[13,"Translation",280],[13,"AccessFlag",280],[13,"Permission",280],[4,"L0Table",312],[4,"L1Table",312],[3,"Granule",364],[8,"Device",500],[8,"Write",500],[4,"L0Table",536],[4,"L1Table",536],[4,"L2Table",536],[4,"L3Table",536],[3,"RealmConfig",691],[4,"L0Table",897],[4,"L1Table",897],[4,"L2Table",897],[4,"L3Table",897],[3,"SMC32",1609],[3,"SMC64",1609]]}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};
